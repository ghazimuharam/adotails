@layout('partials/panel')

{{--  BEGIN CONTENT  --}}
@section('body')
<div class="container mx-auto px-6 py-8">
<h3 class="text-gray-700 text-3xl font-medium">Dashboard</h3>

<div class="mt-4">
  <div class="flex flex-wrap -mx-6">
    <div class="w-full px-6 sm:w-1/2 xl:w-1/3">
      <div class="flex items-center px-5 py-6 shadow-sm rounded-md bg-white">
        <div class="p-3 rounded-full bg-indigo-600 bg-opacity-75">
          <svg class="h-8 w-8 text-white" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
        </div>

        <div class="mx-5">
          <h4 class="text-2xl font-semibold text-gray-700">{{ stats.total_user }}</h4>
          <div class="text-gray-500">Admin</div>
        </div>
    </div>
  </div>

  <div class="w-full mt-6 px-6 sm:w-1/2 xl:w-1/3 sm:mt-0">
    <div class="flex items-center px-5 py-6 shadow-sm rounded-md bg-white">
      <div class="p-3 rounded-full bg-green-600 bg-opacity-75">
        <svg class="h-8 w-8 text-white" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
        </svg>
      </div>

      <div class="mx-5">
        <h4 class="text-2xl font-semibold text-gray-700">{{ stats.total_article }}</h4>
        <div class="text-gray-500">Articles</div>
      </div>
    </div>
  </div>

  <div class="w-full mt-6 px-6 sm:w-1/2 xl:w-1/3 xl:mt-0">
    <div class="flex items-center px-5 py-6 shadow-sm rounded-md bg-white">
      <div class="p-3 rounded-full bg-pink-600 bg-opacity-75">
        <svg class="h-8 w-8 text-white" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9" />
        </svg>
      </div>

      <div class="mx-5">
        <h4 class="text-2xl font-semibold text-gray-700">{{ stats.total_report }}</h4>
        <div class="text-gray-500">Report</div>
      </div>
    </div>
  </div>
</div>

<div class="w-full mt-2">
  <!-- source: https://tailwindcomponents.com/component/calendar-ui-with-tailwindcss-and-alpinejs -->
  <div x-data="app()" x-init="[initDate(), getNoOfDays()]" x-cloak>
      <div class="container py-2">
          <div class="bg-white rounded-lg shadow overflow-hidden">
              <div class="flex items-center justify-between py-2 px-6">
                  <div>
                      <span x-text="MONTH_NAMES[month]" class="text-lg font-bold text-gray-800"></span>
                      <span x-text="year" class="ml-1 text-lg text-gray-600 font-normal"></span>
                  </div>
                  <div class="border rounded-lg px-1" style="padding-top: 2px;">
                      <button
                          type="button"
                          class="leading-none rounded-lg transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 items-center"
                          :class="{'cursor-not-allowed opacity-25': month == 0 }"
                          :disabled="month == 0 ? true : false"
                          @click="month--; getNoOfDays()">
                          <svg class="h-6 w-6 text-gray-500 inline-flex leading-none"  fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                          </svg>
                      </button>
                      <div class="border-r inline-flex h-6"></div>
                      <button
                          type="button"
                          class="leading-none rounded-lg transition ease-in-out duration-100 inline-flex items-center cursor-pointer hover:bg-gray-200 p-1"
                          :class="{'cursor-not-allowed opacity-25': month == 11 }"
                          :disabled="month == 11 ? true : false"
                          @click="month++; getNoOfDays()">
                          <svg class="h-6 w-6 text-gray-500 inline-flex leading-none"  fill="none" viewBox="0 0 24 24" stroke="currentColor">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                          </svg>
                      </button>
                  </div>
              </div>

              <div class="-mx-1 -mb-1">
                  <div class="flex flex-wrap" style="margin-bottom: -40px;">
                      <template x-for="(day, index) in DAYS" :key="index">
                          <div style="width: 14.26%" class="px-2 py-2">
                              <div
                                  x-text="day"
                                  class="text-gray-600 text-sm uppercase tracking-wide font-bold text-center"></div>
                          </div>
                      </template>
                  </div>

                  <div class="flex flex-wrap border-t border-l">
                      <template x-for="blankday in blankdays">
                          <div
                              style="width: 14.28%; height: 120px"
                              class="text-center border-r border-b px-4 pt-2"
                          ></div>
                      </template>
                      <template x-for="(date, dateIndex) in no_of_days" :key="dateIndex">
                          <div style="width: 14.28%; height: 120px" class="px-4 pt-2 border-r border-b relative">
                              <div
                                  @click="showEventModal(date)"
                                  x-text="date"
                                  class="inline-flex w-6 h-6 items-center justify-center cursor-pointer text-center leading-none rounded-full transition ease-in-out duration-100"
                                  :class="{'bg-blue-500 text-white': isToday(date) == true, 'text-gray-700 hover:bg-blue-200': isToday(date) == false }"
                              ></div>
                              <div style="height: 80px;" class="overflow-y-auto mt-1">
                                  <template x-for="event in events.filter(e => new Date(e.event_date).toDateString() ===  new Date(year, month, date).toDateString() )">
                                      <div
                                          class="px-2 py-1 rounded-lg mt-1 overflow-hidden border"
                                          :class="{
                                              'border-blue-200 text-blue-800 bg-blue-100': event.event_theme === 'blue',
                                              'border-red-200 text-red-800 bg-red-100': event.event_theme === 'red',
                                              'border-yellow-200 text-yellow-800 bg-yellow-100': event.event_theme === 'yellow',
                                              'border-green-200 text-green-800 bg-green-100': event.event_theme === 'green',
                                              'border-purple-200 text-purple-800 bg-purple-100': event.event_theme === 'purple'
                                          }"
                                      >
                                          <p x-text="event.event_title" class="text-sm truncate leading-tight"></p>
                                      </div>
                                  </template>
                              </div>
                          </div>
                      </template>
                  </div>
              </div>
          </div>
      </div>
  </div>
</div>
<!-- AlpineJS -->
<script src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@v2.x.x/dist/alpine.min.js" defer></script>
<!-- Font Awesome -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/js/all.min.js" integrity="sha256-KzZiKy0DWYsnwMF+X1DvQngQ2/FxF7MF3Ff72XcpuPs=" crossorigin="anonymous"></script>

<script>
const MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];

function app() {
  return {
    month: '',
    year: '',
    no_of_days: [],
    blankdays: [],
    days: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],

    events: [
      {
        event_date: new Date(2020, 3, 1),
        event_title: "April Fool's Day",
        event_theme: 'blue'
      },

      {
        event_date: new Date(2020, 3, 10),
        event_title: "Birthday",
        event_theme: 'red'
      },

      {
        event_date: new Date(2020, 3, 16),
        event_title: "Upcoming Event",
        event_theme: 'green'
      }
    ],
    event_title: '',
    event_date: '',
    event_theme: 'blue',

    themes: [
      {
        value: "blue",
        label: "Blue Theme"
      },
      {
        value: "red",
        label: "Red Theme"
      },
      {
        value: "yellow",
        label: "Yellow Theme"
      },
      {
        value: "green",
        label: "Green Theme"
      },
      {
        value: "purple",
        label: "Purple Theme"
      }
    ],

    openEventModal: false,

    initDate() {
      let today = new Date();
      this.month = today.getMonth();
      this.year = today.getFullYear();
      this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();
    },

    isToday(date) {
      const today = new Date();
      const d = new Date(this.year, this.month, date);

      return today.toDateString() === d.toDateString() ? true : false;
    },

    showEventModal(date) {
      // open the modal
      this.openEventModal = true;
      this.event_date = new Date(this.year, this.month, date).toDateString();
    },

    addEvent() {
      if (this.event_title == '') {
        return;
      }

      this.events.push({
        event_date: this.event_date,
        event_title: this.event_title,
        event_theme: this.event_theme
      });

      console.log(this.events);

      // clear the form data
      this.event_title = '';
      this.event_date = '';
      this.event_theme = 'blue';

      //close the modal
      this.openEventModal = false;
    },

    getNoOfDays() {
      let daysInMonth = new Date(this.year, this.month + 1, 0).getDate();

      // find where to start calendar day of week
      let dayOfWeek = new Date(this.year, this.month).getDay();
      let blankdaysArray = [];
      for ( var i=1; i <= dayOfWeek; i++) {
        blankdaysArray.push(i);
      }

      let daysArray = [];
      for ( var i=1; i <= daysInMonth; i++) {
        daysArray.push(i);
      }

      this.blankdays = blankdaysArray;
      this.no_of_days = daysArray;
    }
  }
}
</script>
@endsection
